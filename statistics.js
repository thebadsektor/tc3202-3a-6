// This will store the Chart.js chart instances
let transactionChart, salesChart;

// Initial empty chart setup
document.addEventListener('DOMContentLoaded', () => {
    const transactionCtx = document.getElementById('salesChart').getContext('2d');
    const salesCtx = document.getElementById('totalSalesChart').getContext('2d');

    // Creating an empty transaction chart (Total Transactions)
    transactionChart = new Chart(transactionCtx, {
        type: 'bar',
        data: {
            labels: [],
            datasets: [{
                label: 'Total Transactions',
                data: [],
                borderColor: '#4361ee',
                backgroundColor: '#4361ee',
                fill: false
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    mode: 'index',
                    intersect: false,
                }
            }
        }
    });

    // Creating an empty sales chart (Total Sales)
    salesChart = new Chart(salesCtx, {
        type: 'bar',
        data: {
            labels: [],
            datasets: [{
                label: 'Total Sales',
                data: [],
                borderColor: '#ff6363',
                backgroundColor: '#ff6363',
                fill: false
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    mode: 'index',
                    intersect: false,
                }
            }
        }
    });

    const showGraphBtn = document.getElementById('showGraphBtn');
    if (showGraphBtn) {
        showGraphBtn.addEventListener('click', sendGraphRequest);
    } else {
        console.log("Button not found!");
    }
});

// Function to handle graph rendering
window.sendGraphRequest = async function () {
    const selectedYear = document.getElementById('year-select').value;
    const selectedBrand = document.getElementById('brand-select').value;
    const selectedProduct = document.getElementById('product-select').value;

    console.log(`Selected Year: ${selectedYear}, Brand: ${selectedBrand}, Product: ${selectedProduct}`);

    const totalMonthlyTransactions = {
        2020: [760, 641, 634, 679, 912, 708, 800, 614, 720, 774, 618, 736], 
        2021: [999, 710, 708, 690, 815, 813, 866, 839, 834, 835, 740, 680], 
        2022: [969, 700, 679, 775, 916, 784, 808, 891, 758, 709, 695, 675], 
        2023: [768, 691, 822, 710, 757, 739, 696, 736, 705, 850, 734, 624], 
        2024: [744, 720, 727, 590, 673, 609, 830, 814, 802, 774, 738, 655]
    };

    const ssmartphones = {
        2020: [138, 136, 99, 134, 186, 149, 171, 59, 109, 144, 113, 166], 
        2021: [221, 139, 160, 107, 157, 165, 195, 111, 175, 163, 131, 124], 
        2022: [225, 171, 176, 156, 169, 208, 196, 239, 142, 151, 159, 181], 
        2023: [178, 179, 163, 155, 156, 115, 119, 184, 146, 175, 93, 129], 
        2024: [152, 107, 167, 126, 116, 134, 198, 187, 165, 184, 122, 125]
    }

    const sheadphones = {
        2020: [128, 158, 120, 128, 165, 112, 116, 142, 157, 148, 128, 113], 
        2021: [171, 91, 149, 175, 173, 122, 198, 167, 152, 181, 100, 145], 
        2022: [197, 111, 141, 153, 164, 130, 179, 205, 115, 95, 132, 135], 
        2023: [167, 79, 157, 155, 143, 143, 166, 161, 204, 192, 159, 107], 
        2024: [171, 136, 150, 120, 137, 78, 142, 159, 155, 142, 134, 117]
    }

    const slaptops = {
        2020: [198, 140, 151, 68, 178, 144, 165, 180, 201, 197, 106, 168], 
        2021: [191, 137, 154, 170, 176, 124, 129, 154, 201, 179, 230, 175], 
        2022: [172, 154, 122, 199, 209, 166, 135, 139, 152, 155, 149, 164], 
        2023: [196, 99, 161, 143, 143, 185, 152, 118, 96, 129, 146, 147], 
        2024: [166, 162, 112, 65, 161, 122, 175, 134, 196, 139, 140, 121]
    }

    const stablets = {
        2020: [171, 102, 116, 183, 185, 109, 161, 110, 106, 159, 141, 160], 
        2021: [200, 163, 85, 67, 141, 160, 177, 177, 159, 134, 164, 123], 
        2022: [188, 151, 144, 118, 187, 137, 167, 156, 151, 140, 137, 124], 
        2023: [127, 167, 139, 102, 146, 164, 148, 152, 138, 206, 190, 103], 
        2024: [122, 155, 116, 157, 121, 99, 133, 199, 107, 180, 155, 135]
    }

    const ssmartwatch = {
        2020: [125, 105, 148, 166, 198, 194, 187, 123, 147, 126, 130, 129], 
        2021: [216, 180, 160, 171, 168, 242, 167, 230, 147, 178, 115, 113], 
        2022: [187, 113, 96, 149, 187, 143, 131, 152, 198, 168, 118, 71], 
        2023: [100, 167, 202, 155, 169, 132, 111, 121, 121, 148, 146, 138], 
        2024: [133, 160, 182, 122, 138, 176, 182, 135, 179, 129, 187, 157]
    }

    const sappleall = {
        2020: [165, 135, 85, 185, 147, 151, 181, 104, 142, 108, 146, 155], 
        2021: [140, 160, 112, 170, 150, 134, 155, 146, 147, 148, 158, 151], 
        2022: [238, 153, 151, 130, 201, 197, 162, 220, 142, 96, 124, 123], 
        2023: [185, 131, 160, 107, 149, 145, 122, 163, 118, 192, 125, 109], 
        2024: [126, 133, 104, 133, 159, 112, 151, 217, 114, 133, 163, 104]
    }

    const sapplesmartphones = {
        2020: [10, 37, 13, 25, 54, 21, 33, 1, 23, 25, 15, 5], 
        2021: [25, 50, 15, 31, 31, 27, 38, 9, 32, 30, 30, 35], 
        2022: [56, 44, 12, 22, 43, 41, 44, 74, 21, 17, 15, 41], 
        2023: [70, 37, 27, 6, 19, 14, 23, 46, 11, 29, 6, 19], 
        2024: [25, 13, 18, 20, 28, 32, 50, 49, 38, 29, 12, 11]
    }

    const sappleheadphones = {
        2020: [25, 20, 10, 39, 31, 16, 6, 24, 56, 30, 30, 20], 
        2021: [25, 24, 57, 19, 49, 33, 59, 53, 3, 27, 35, 25], 
        2022: [48, 31, 50, 41, 30, 34, 46, 44, 9, 8, 37, 15], 
        2023: [26, 24, 37, 51, 28, 31, 43, 27, 34, 30, 32, 1], 
        2024: [25, 28, 20, 18, 46, 10, 10, 26, 20, 19, 26, 20]
    }

    const sapplelaptops = {
        2020: [74, 39, 14, 27, 29, 40, 32, 26, 19, 14, 26, 39], 
        2021: [32, 20, 10, 60, 26, 26, 9, 6, 47, 26, 58, 25], 
        2022: [46, 30, 28, 36, 41, 48, 38, 56, 34, 25, 18, 38], 
        2023: [37, 21, 35, 7, 48, 23, 9, 12, 19, 41, 25, 35], 
        2024: [21, 26, 34, 12, 16, 23, 34, 22, 11, 25, 41, 28]
    }

    const sappletablets = {
        2020: [39, 21, 10, 68, 13, 48, 48, 29, 27, 25, 47, 54], 
        2021: [36, 36, 4, 29, 18, 5, 23, 34, 46, 39, 15, 53], 
        2022: [60, 30, 55, 19, 44, 37, 23, 35, 35, 9, 28, 8], 
        2023: [38, 15, 8, 13, 31, 33, 32, 39, 37, 72, 30, 26], 
        2024: [27, 37, 17, 29, 35, 8, 32, 82, 1, 30, 36, 30]
    }

    const sapplesmartwatch = {
        2020: [17, 18, 38, 26, 20, 26, 62, 24, 17, 14, 28, 37], 
        2021: [22, 30, 26, 31, 26, 43, 26, 44, 19, 26, 20, 13], 
        2022: [28, 18, 6, 12, 43, 37, 11, 11, 43, 37, 26, 21], 
        2023: [14, 34, 53, 30, 23, 44, 15, 39, 17, 20, 32, 28], 
        2024: [28, 29, 15, 54, 34, 39, 25, 38, 44, 30, 48, 15]
    }

    const ssamall = {
        2020: [145, 145, 128, 128, 137, 158, 184, 129, 154, 124, 142, 113], 
        2021: [199, 133, 168, 105, 202, 189, 160, 159, 169, 192, 122, 156], 
        2022: [160, 110, 140, 193, 143, 197, 159, 227, 127, 123, 227, 132], 
        2023: [158, 166, 148, 195, 124, 169, 140, 205, 141, 156, 163, 106], 
        2024: [177, 111, 169, 75, 99, 82, 197, 124, 200, 144, 174, 131]
    }

    const ssamsmartphone = {
        2020: [32, 21, 16, 22, 44, 13, 54, 7, 13, 1, 20, 29], 
        2021: [41, 24, 60, 18, 30, 29, 55, 34, 25, 30, 18, 17], 
        2022: [47, 30, 67, 41, 7, 87, 24, 50, 23, 32, 72, 22], 
        2023: [13, 44, 37, 53, 39, 44, 21, 44, 36, 28, 38, 15], 
        2024: [22, 24, 40, 5, 12, 3, 37, 38, 56, 13, 32, 31]
    }

    const ssamheadphones = {
        2020: [12, 47, 27, 35, 7, 53, 14, 29, 10, 29, 29, 22], 
        2021: [37, 18, 18, 24, 38, 34, 27, 21, 40, 37, 14, 37], 
        2022: [13, 14, 35, 31, 22, 33, 20, 65, 42, 9, 33, 17], 
        2023: [28, 9, 28, 31, 9, 28, 34, 43, 27, 58, 26, 28], 
        2024: [59, 11, 50, 15, 12, 30, 30, 9, 51, 29, 28, 23]
    }

    const ssamlaptops = {
        2020: [14, 26, 52, 8, 27, 24, 26, 42, 68, 50, 31, 36], 
        2021: [47, 28, 41, 20, 57, 27, 43, 46, 31, 42, 42, 46], 
        2022: [53, 9, 16, 50, 47, 19, 30, 33, 29, 43, 49, 18], 
        2023: [55, 25, 19, 31, 21, 49, 16, 22, 24, 19, 47, 21], 
        2024: [35, 15, 12, 15, 35, 15, 49, 26, 36, 27, 50, 24]
    }

    const ssamtablets = {
        2020: [53, 31, 13, 40, 15, 24, 64, 31, 22, 34, 33, 10], 
        2021: [29, 27, 21, 10, 34, 57, 8, 34, 30, 34, 28, 30], 
        2022: [31, 44, 10, 36, 27, 25, 36, 45, 6, 8, 31, 59], 
        2023: [32, 47, 19, 21, 35, 27, 44, 47, 24, 28, 35, 21], 
        2024: [30, 22, 27, 19, 14, 12, 37, 37, 33, 42, 6, 33]
    }

    const ssamsmartwatch = {
        2020: [34, 20, 20, 23, 44, 44, 26, 20, 41, 10, 29, 16], 
        2021: [45, 36, 28, 33, 43, 42, 27, 24, 43, 49, 20, 26], 
        2022: [16, 13, 12, 35, 40, 33, 49, 34, 27, 31, 42, 16], 
        2023: [30, 41, 45, 59, 20, 21, 25, 49, 30, 23, 17, 21], 
        2024: [31, 39, 40, 21, 26, 22, 44, 14, 24, 33, 58, 20]
    }

    const ssonyall = {
        2020: [146, 118, 157, 98, 237, 125, 93, 96, 149, 187, 116, 133], 
        2021: [272, 102, 170, 88, 151, 215, 209, 193, 144, 120, 157, 142], 
        2022: [149, 131, 135, 198, 181, 135, 152, 133, 158, 191, 107, 133], 
        2023: [133, 126, 172, 153, 151, 165, 137, 144, 144, 163, 141, 128], 
        2024: [128, 148, 138, 115, 169, 106, 138, 178, 127, 163, 108, 198]
    }

    const ssonysmartphone = {
        2020: [34, 22, 17, 31, 21, 25, 18, 19, 17, 48, 29, 40], 
        2021: [41, 15, 31, 5, 40, 60, 47, 35, 29, 32, 31, 32], 
        2022: [47, 44, 37, 48, 37, 22, 29, 14, 25, 44, 25, 33], 
        2023: [39, 15, 42, 53, 30, 28, 35, 39, 63, 36, 3, 12], 
        2024: [34, 33, 17, 35, 32, 24, 28, 44, 15, 39, 11, 51]
    }

    const ssonyheadphones = {
        2020: [39, 36, 37, 15, 53, 12, 17, 37, 48, 23, 20, 3], 
        2021: [44, 20, 22, 34, 34, 27, 42, 36, 17, 24, 9, 34], 
        2022: [40, 13, 29, 36, 38, 27, 40, 41, 17, 35, 13, 32], 
        2023: [23, 12, 16, 25, 33, 31, 19, 36, 47, 15, 57, 22], 
        2024: [27, 20, 18, 22, 37, 11, 55, 57, 9, 32, 20, 41]
    }

    const ssonylaptops = {
        2020: [27, 12, 19, 7, 55, 45, 18, 7, 31, 54, 10, 28], 
        2021: [51, 20, 44, 35, 16, 39, 31, 42, 53, 30, 58, 29], 
        2022: [13, 19, 24, 33, 41, 45, 13, 14, 25, 28, 26, 49], 
        2023: [36, 23, 46, 34, 16, 51, 37, 22, 14, 45, 14, 31], 
        2024: [43, 19, 15, 12, 19, 10, 12, 19, 39, 20, 37, 20]
    }

    const ssonytablets = {
        2020: [21, 18, 51, 13, 57, 4, 13, 10, 24, 33, 22, 22], 
        2021: [69, 28, 29, 11, 27, 32, 34, 57, 19, 5, 39, 15], 
        2022: [24, 23, 20, 31, 27, 22, 36, 22, 44, 30, 19, 15], 
        2023: [17, 50, 55, 19, 15, 44, 26, 42, 8, 34, 32, 24], 
        2024: [9, 52, 36, 35, 35, 19, 15, 32, 28, 43, 33, 22]
    }

    const ssonysmartwatch = {
        2020: [25, 30, 33, 32, 51, 39, 27, 23, 29, 29, 35, 40], 
        2021: [67, 19, 44, 3, 34, 57, 55, 23, 26, 29, 20, 32], 
        2022: [25, 32, 25, 50, 38, 19, 34, 42, 47, 54, 24, 4], 
        2023: [18, 26, 13, 22, 57, 11, 20, 5, 12, 33, 35, 39], 
        2024: [15, 24, 52, 11, 46, 42, 28, 26, 36, 29, 7, 64]
    }

    const shpall = {
        2020: [153, 137, 142, 158, 213, 143, 183, 135, 121, 199, 121, 165], 
        2021: [219, 164, 96, 132, 146, 100, 109, 159, 157, 186, 131, 112], 
        2022: [210, 159, 111, 131, 189, 108, 142, 147, 188, 165, 130, 125], 
        2023: [150, 153, 159, 146, 204, 152, 165, 122, 121, 208, 160, 164], 
        2024: [190, 194, 155, 160, 126, 199, 173, 182, 150, 201, 150, 80]
    }

    const shpsmartphone = {
        2020: [29, 27, 25, 33, 30, 41, 43, 1, 22, 38, 40, 63], 
        2021: [46, 19, 32, 32, 42, 25, 13, 17, 28, 47, 26, 23], 
        2022: [35, 27, 24, 14, 39, 28, 31, 37, 37, 36, 21, 47], 
        2023: [31, 51, 35, 17, 54, 14, 33, 33, 10, 43, 21, 50], 
        2024: [44, 31, 61, 44, 23, 52, 45, 44, 17, 57, 29, 12]
    }

    const shpheadphones = {
        2020: [27, 27, 10, 35, 53, 8, 41, 22, 25, 45, 29, 18], 
        2021: [23, 11, 1, 33, 18, 7, 10, 38, 48, 54, 20, 21], 
        2022: [45, 36, 1, 17, 31, 15, 30, 40, 16, 29, 29, 23], 
        2023: [48, 8, 44, 33, 46, 30, 28, 20, 34, 74, 23, 42], 
        2024: [42, 28, 50, 29, 26, 11, 11, 24, 22, 33, 50, 21]
    }

    const shplaptops = {
        2020: [44, 51, 61, 22, 17, 31, 44, 59, 38, 51, 15, 36], 
        2021: [37, 46, 22, 12, 28, 15, 24, 44, 26, 23, 41, 34], 
        2022: [37, 46, 33, 54, 45, 20, 26, 2, 32, 29, 44, 13], 
        2023: [35, 16, 19, 36, 27, 38, 51, 41, 20, 19, 25, 23], 
        2024: [54, 60, 18, 8, 38, 39, 34, 44, 42, 34, 11, 16]
    }

    const shptablets = {
        2020: [29, 23, 24, 23, 57, 25, 27, 34, 7, 17, 9, 32], 
        2021: [32, 41, 23, 1, 25, 21, 46, 19, 41, 24, 33, 12], 
        2022: [36, 37, 27, 26, 56, 29, 32, 20, 44, 49, 25, 15], 
        2023: [23, 34, 18, 28, 38, 48, 26, 17, 22, 35, 53, 23], 
        2024: [17, 35, 0, 57, 23, 47, 31, 20, 38, 48, 33, 19]
    }

    const shpsmartwatch = {
        2020: [24, 9, 22, 45, 56, 38, 28, 19, 29, 48, 28, 16], 
        2021: [81, 47, 18, 54, 33, 32, 16, 41, 14, 38, 11, 22], 
        2022: [57, 13, 26, 20, 18, 16, 23, 48, 59, 22, 11, 27], 
        2023: [13, 44, 43, 32, 39, 22, 27, 11, 35, 37, 38, 26], 
        2024: [33, 40, 26, 22, 16, 50, 52, 50, 31, 29, 27, 12]
    }

    const sotherall = {
        2020: [151, 106, 122, 110, 178, 131, 159, 150, 154, 156, 93, 170], 
        2021: [169, 151, 162, 195, 166, 175, 233, 182, 217, 189, 172, 119], 
        2022: [212, 147, 142, 123, 202, 147, 193, 164, 143, 134, 107, 162], 
        2023: [142, 115, 183, 109, 129, 108, 132, 102, 181, 131, 145, 117], 
        2024: [123, 134, 161, 107, 120, 110, 171, 113, 211, 133, 143, 142]
    }

    const sothersmartphone = {
        2020: [33, 29, 28, 23, 37, 49, 23, 31, 34, 32, 9, 29], 
        2021: [68, 31, 22, 21, 14, 24, 42, 16, 61, 24, 26, 17], 
        2022: [40, 26, 36, 31, 43, 30, 68, 64, 36, 22, 26, 38], 
        2023: [25, 32, 22, 26, 14, 15, 7, 22, 26, 39, 25, 33], 
        2024: [27, 6, 31, 22, 21, 23, 38, 12, 39, 46, 38, 20]
    }

    const sotherheadphones = {
        2020: [25, 28, 36, 4, 21, 23, 38, 30, 18, 21, 20, 50], 
        2021: [42, 18, 51, 65, 34, 21, 60, 19, 44, 39, 22, 28], 
        2022: [51, 17, 26, 28, 43, 21, 43, 15, 31, 14, 20, 48], 
        2023: [42, 26, 32, 15, 27, 23, 42, 35, 62, 15, 21, 14], 
        2024: [18, 49, 12, 36, 16, 16, 36, 43, 53, 29, 10, 12]
    }

    const sotherlaptops = {
        2020: [39, 12, 5, 4, 50, 4, 45, 46, 45, 28, 24, 29], 
        2021: [24, 23, 37, 43, 49, 17, 22, 16, 44, 58, 31, 41], 
        2022: [23, 50, 21, 26, 35, 34, 28, 34, 32, 30, 12, 46], 
        2023: [33, 14, 42, 35, 31, 24, 39, 21, 19, 5, 35, 37], 
        2024: [13, 42, 33, 18, 53, 35, 46, 23, 68, 33, 1, 33]
    }

    const sothertablets = {
        2020: [29, 9, 18, 39, 43, 8, 9, 6, 26, 50, 30, 42], 
        2021: [34, 31, 8, 16, 37, 45, 66, 33, 23, 32, 49, 13], 
        2022: [37, 17, 32, 6, 33, 24, 40, 34, 22, 44, 34, 27], 
        2023: [17, 21, 39, 21, 27, 12, 20, 7, 47, 37, 40, 9], 
        2024: [39, 9, 36, 17, 14, 13, 18, 28, 7, 17, 47, 31]
    }

    const sothersmartwatch = {
        2020: [25, 28, 35, 40, 27, 47, 44, 37, 31, 25, 10, 20], 
        2021: [1, 48, 44, 50, 32, 68, 43, 98, 45, 36, 44, 20], 
        2022: [61, 37, 27, 32, 48, 38, 14, 17, 22, 24, 15, 3], 
        2023: [25, 22, 48, 12, 30, 34, 24, 17, 27, 35, 24, 24], 
        2024: [26, 28, 49, 14, 16, 23, 33, 7, 44, 8, 47, 46]
    }

    const totalTransactions = {2020: 8596, 2021: 9529, 2022: 9359, 2023: 8832, 2024: 8676 };
    const sallappleall = {2020: 1704, 2021: 1771, 2022: 1937, 2023: 1706, 2024: 1649}
    const sallsamsungall = {2020: 1687, 2021: 1954, 2022: 1938, 2023: 1871, 2024: 1683}
    const sallsonyall = {2020: 1655, 2021: 1963, 2022: 1803, 2023: 1757, 2024: 1716}
    const sallhpall = {2020: 1870, 2021: 1711, 2022: 1805, 2023: 1904, 2024: 1960}
    const sallotherall = {2020: 1680, 2021: 2130, 2022: 1876, 2023: 1594, 2024: 1668}
    const sallallsmartp = {2020: 1604, 2021: 1848, 2022: 2173, 2023: 1792, 2024: 1783}
    const sallallheadp = {2020: 1615, 2021: 1824, 2022: 1757, 2023: 1833, 2024: 1641}
    const sallalllaptops = {2020: 1896, 2021: 2020, 2022: 1916, 2023: 1715, 2024: 1693}
    const sallalltablets = {2020: 1703, 2021: 1750, 2022: 1800, 2023: 1782, 2024: 1679}
    const sallallsmartw = {2020: 1778, 2021: 2087, 2022: 1713, 2023: 1710, 2024: 1880}
    const sallapplesmartp = {2020: 262, 2021: 353, 2022: 430, 2023: 307, 2024: 325}
    const sallappleheadp = {2020: 307, 2021: 409, 2022: 393, 2023: 364, 2024: 268}
    const sallappllelaptops = {2020: 379, 2021: 345, 2022: 438, 2023: 312, 2024: 293}
    const sallappletablets = {2020: 429, 2021: 338, 2022: 383, 2023: 374, 2024: 364}
    const sallapplesmartw = {2020: 327, 2021: 326, 2022: 293, 2023: 349, 2024: 399}
    const sallsamsmartp = {2020: 272, 2021: 381, 2022: 502, 2023: 412, 2024: 313}
    const sallsamheadp = {2020: 314, 2021: 345, 2022: 334, 2023: 349, 2024: 347}
    const sallsamlaptops = {2020: 404, 2021: 470, 2022: 396, 2023: 349, 2024: 339}
    const sallsamtablets = {2020: 370, 2021: 342, 2022: 358, 2023: 380, 2024: 312}
    const sallsamsmartw = {2020: 327, 2021: 416, 2022: 348, 2023: 381, 2024: 372}
    const sallsonysmartp = {2020: 321, 2021: 398, 2022: 405, 2023: 395, 2024: 363}
    const sallsonyheadp = {2020: 340, 2021: 343, 2022: 361, 2023: 336, 2024: 349}
    const sallsonylaptops = {2020: 313, 2021: 448, 2022: 330, 2023: 369, 2024: 265}
    const sallsonytablets = {2020: 288, 2021: 365, 2022: 313, 2023: 366, 2024: 359}
    const sallsonysmartw = {2020: 393, 2021: 409, 2022: 394, 2023: 291, 2024: 380}
    const sallhpsmartp = {2020: 392, 2021: 350, 2022: 376, 2023: 392, 2024: 459}
    const sallhpheadp = {2020: 340, 2021: 284, 2022: 312, 2023: 430, 2024: 347}
    const sallhplaptops = {2020: 469, 2021: 352, 2022: 381, 2023: 350, 2024: 398}
    const sallhptablets = {2020: 307, 2021: 318, 2022: 396, 2023: 365, 2024: 368}
    const sallhpsmartw = {2020: 362, 2021: 407, 2022: 340, 2023: 367, 2024: 388}
    const sallotthersmartp = {2020: 357, 2021: 366, 2022: 460, 2023: 286, 2024: 323}
    const sallotherheadp = {2020: 314, 2021: 443, 2022: 357, 2023: 354, 2024: 330}
    const sallotherlaptops = {2020: 331, 2021: 405, 2022: 371, 2023: 335, 2024: 398}
    const sallothertablets = {2020: 309, 2021: 387, 2022: 350, 2023: 297, 2024: 276}
    const sallothersmartw = {2020: 369, 2021: 529, 2022: 338, 2023: 322, 2024: 341}

    const totalMonthlySales = {
        2020: [21801070.00, 18703840.00, 18377860.00, 17976800.00, 23929770.00, 21115100.00, 23122430.00, 16294370.00, 20826120.00, 22106520.00, 17680350.00, 21350240.00],
        2021: [27466820.00, 20564970.00, 19428180.00, 17902340.00, 21963990.00, 20594890.00, 21533150.00, 22059310.00, 24240710.00, 21283060.00, 21715000.00, 20879980.00],
        2022: [27521980.00, 19721650.00, 18085200.00, 22999050.00, 27149350.00, 23063410.00, 22626780.00, 23755760.00, 20350430.00, 19049140.00, 19898920.00, 19294370.00],
        2023: [25079140.00, 20407630.00, 20222340.00, 18680870.00, 20843090.00, 22021460.00, 17938870.00, 21343970.00, 17012940.00, 24780690.00, 18808700.00, 17054020.00],
        2024: [18998390.00, 19104660.00, 17099260.00, 13638640.00, 18805710.00, 16719290.00, 21389690.00, 23863180.00, 21450440.00, 21827150.00, 20014300.00, 17781180.00],
    };

    const smartphones = {
        2020: [3597910, 4382900, 2895050, 4361780, 5725370, 3967340, 5368650, 1442100, 3141050, 3933000, 3620820, 3890040],
        2021: [5615180, 4698180, 4961340, 3265060, 5185720, 5224310, 5760060, 3856420, 4852690, 4530070, 3679730, 4137390],
        2022: [7545580, 5392400, 4776790, 4638490, 5030320, 5854160, 6170070, 7438520, 3721920, 4233500, 4416920, 6055250],
        2023: [7161080, 5097530, 5033140, 4886900, 4665040, 3755370, 3374820, 5559750, 4483490, 5334970, 1910360, 3526350],
        2024: [4216140, 3306140, 3981610, 3185880, 3761050, 4045760, 5824230, 6027030, 5061810, 5247590, 2991670, 3596360]
    }

    const laptops = {
        2020: [9307830, 7290770, 8257510, 3489550, 7988900, 7782110, 8030320, 8174880, 9694760, 9604810, 5577780, 8548410], 
        2021: [9506480, 6963680, 7519350, 8528240, 8503030, 6112330, 6597640, 7868340, 10005570, 7757390, 10852730, 8829860], 
        2022: [8954720, 6674110, 5820490, 9930340, 10528270, 8310250, 6991420, 6647340, 7332740, 7375830, 7885890, 7295430], 
        2023: [10390360, 5429070, 6978030, 6192970, 7250560, 8486770, 6480360, 5542720, 4467600, 7555510, 7369840, 6680990], 
        2024: [7522190, 7058560, 5387400, 2700620, 6914580, 6028840, 7591970, 6696940, 8541630, 6176800, 7772720, 5342430]
    }

    const headphones = {
        2020: [1225990, 1252060, 1002760, 1095280, 1532610, 941330, 958590, 1148320, 1563160, 1407060, 1098070, 831000], 
        2021: [1484670, 894780, 1218110, 1431200, 1457690, 1113620, 1859450, 1477340, 1225290, 1530970, 832980, 1328290], 
        2022: [1809410, 823370, 1124180, 1532530, 1512610, 1156640, 1566490, 1842330, 869580, 864510, 1055790, 1086990], 
        2023: [1310940, 682750, 1273490, 1456050, 1475770, 1298660, 1501500, 1345520, 1811450, 1629120, 1699070, 1094200], 
        2024: [1586450, 1065060, 1342950, 949660, 1356580, 584720, 1301940, 1486660, 1224630, 1327960, 1221720, 1144740]
    }

    const tablets = {
        2020: [5699020, 4046100, 3873710, 6698840, 5423990, 5225470, 5707680, 3733600, 4192810, 5249320, 5111890, 5572450], 
        2021: [6997590, 5252780, 3091040, 2450930, 4013130, 4272150, 4654570, 5765440, 5922450, 4630430, 4654790, 4939030], 
        2022: [6623220, 5372020, 4994580, 4761420, 7155070, 5366930, 5711670, 5548300, 4951240, 3886780, 4336890, 3763540], 
        2023: [4582610, 6230200, 3895270, 3407600, 4906570, 6269200, 4829690, 6589770, 4595550, 8086350, 5711790, 3771370], 
        2024: [3375540, 5099030, 3925140, 4883640, 4300350, 3241680, 3878000, 7376280, 3653210, 6704650, 5132830, 4997300]
    }

    const smartwatches = {
        2020: [1970320, 1732010, 2348830, 2331350, 3258900, 3198850, 3057190, 1795470, 2234340, 1912330, 2271790, 2508340], 
        2021: [3862900, 2755550, 2638340, 2226910, 2804420, 3872480, 2661430, 3091770, 2234710, 2834200, 1694770, 1645410], 
        2022: [2589050, 1459750, 1369160, 2036270, 2923080, 2375430, 2187130, 2279270, 3474950, 2688520, 2203430, 1093160], 
        2023: [1634150, 2968080, 3042410, 2737350, 2545150, 2211460, 1752500, 2306210, 1654850, 2174740, 2117640, 1981110], 
        2024: [2298070, 2575870, 2462160, 1918840, 2473150, 2818290, 2793550, 2276270, 2969160, 2370150, 2895360, 2700350]
    }

    const applesmartphones = {
        2020: [559770, 2277980, 704640, 1536280, 3024050, 1149910, 1792400, 46490, 1168660, 1231620, 790640, 225870], 
        2021: [1317060, 2849760, 896580, 1753750, 1740680, 1395710, 2179000, 567170, 1699540, 1529390, 1697130, 1902820], 
        2022: [3377730, 2194530, 573680, 1249450, 2341370, 2078400, 2767900, 4196430, 1015920, 812940, 684790, 2613890], 
        2023: [3903300, 2019970, 1692850, 387120, 1118200, 803810, 1164130, 2480390, 644550, 1571010, 292140, 1068940], 
        2024: [1427320, 707020, 1045410, 927290, 1565990, 1878100, 2763950, 2398020, 1920070, 1606230, 631590, 528200]
    }

    const applelaptops = {
        2020: [4672740, 2499560, 1008830, 1653270, 1754620, 2775460, 2125600, 1579950, 1174520, 1034360, 1599530, 2541660], 
        2021: [1968650, 1414450, 786820, 3908870, 1792790, 1726450, 615770, 388300, 3232420, 1726870, 3542070, 1585410], 
        2022: [3108230, 1897580, 1667340, 2181530, 2765240, 3094360, 2682150, 3374100, 2231250, 1562820, 1217140, 2528180], 
        2023: [2368590, 1287930, 2202740, 508830, 3392610, 1326400, 566390, 746490, 1158580, 2849630, 1836500, 2238610], 
        2024: [1390830, 1575700, 2302650, 774800, 1136870, 1605680, 2006110, 1533870, 642540, 1638510, 2748170, 1674560]
    }

    const appleheadphones = {
        2020: [349260, 197840, 76180, 398310, 291310, 163440, 63400, 224020, 586100, 347980, 261070, 236050], 
        2021: [207170, 300220, 562420, 162330, 450930, 356060, 628930, 484300, 20850, 278790, 326480, 212510], 
        2022: [533800, 263120, 429430, 414820, 341160, 339790, 417490, 397410, 113310, 51680, 372250, 135550], 
        2023: [310640, 187010, 349580, 500150, 302570, 284000, 429180, 279640, 291940, 328890, 376020, 8850], 
        2024: [251310, 242040, 235010, 155100, 441430, 146800, 74380, 290800, 233030, 214150, 238510, 208840]
    }

    const appletablets = {
        2020: [2142080, 1170960, 634150, 3587630, 741530, 2797200, 2359710, 1660570, 1489820, 1453620, 2386090, 3116690], 
        2021: [2082470, 1814750, 199690, 1382620, 900040, 305170, 1391950, 1897710, 2373590, 1968720, 680910, 2733040], 
        2022: [2979470, 1870850, 2915040, 1036230, 2637150, 2398590, 1118060, 1999910, 1872550, 479590, 1521060, 393760], 
        2023: [2185810, 838180, 492490, 724680, 1798380, 1773040, 1679200, 2018040, 2103940, 4360160, 1643110, 1580380], 
        2024: [1393000, 1915120, 1085630, 1472100, 2095490, 344840, 1775900, 4127830, 48690, 1788800, 1809580, 1775650]
    }

    const applesmartwatches = {
        2020: [299400, 469450, 863740, 498830, 457560, 597010, 1306040, 479740, 335440, 309440, 528710, 788800], 
        2021: [596760, 702060, 606680, 593280, 488040, 947430, 538260, 1068680, 434500, 588720, 441760, 236580], 
        2022: [491660, 420670, 140210, 173730, 913790, 840570, 275910, 174870, 984810, 758820, 609730, 349930], 
        2023: [267040, 827020, 954140, 653990, 384480, 1007220, 336510, 793150, 361500, 314430, 652070, 461530], 
        2024: [527760, 619120, 320150, 916600, 801120, 734490, 572790, 917410, 1005550, 621000, 1052640, 294490]
    }

    const appleall = {
        2020: [8023250, 6615790, 3287540, 7674320, 6269070, 7483020, 7647150, 3990770, 4754540, 4377020, 5566040, 6909070], 
        2021: [6172110, 7081240, 3052190, 7800850, 5372480, 4730820, 5353910, 4406160, 7760900, 6092490, 6688350, 6670360], 
        2022: [10490890, 6646750, 5725700, 5055760, 8998710, 8751710, 7261510, 10142720, 6217840, 3665850, 4404970, 6021310], 
        2023: [9035380, 5160110, 5691800, 2774770, 6996240, 5194470, 4175410, 6317710, 4560510, 9424120, 4799840, 5358310], 
        2024: [4990220, 5059000, 4988850, 4245890, 6040900, 4709910, 7193130, 9267930, 3849880, 5868690, 6480490, 4481740]
    }

    const samsungsmartphones = {
        2020: [726690, 615160, 635410, 778510, 1127870, 454750, 1895740, 179340, 467480, 27760, 542980, 593140], 
        2021: [1246430, 649310, 1950450, 412490, 641430, 687290, 1544020, 1286970, 691010, 541340, 354800, 446760], 
        2022: [1526820, 1126700, 2210320, 1277060, 237530, 2412730, 836200, 1396370, 473660, 1053590, 2095220, 801740], 
        2023: [407030, 1221560, 964530, 1944250, 1284270, 1428970, 444440, 1143410, 1266260, 1044340, 870060, 553620], 
        2024: [512320, 901410, 1006530, 62220, 447900, 113420, 926780, 1037160, 1849780, 380090, 752590, 606680]
    }

    const samsunglaptops = {
        2020: [720940, 1331280, 3281890, 428800, 1779310, 1622380, 1723720, 2590800, 3909610, 2955770, 2098230, 2305150], 
        2021: [3031990, 1987990, 2660660, 1127900, 3524490, 1512340, 2809750, 2741840, 1867480, 2389000, 2199450, 3207000], 
        2022: [3104370, 278730, 880260, 3020220, 2708780, 1428380, 1988470, 1832720, 1537550, 2663620, 3069690, 887910], 
        2023: [4021700, 2112070, 869500, 1940970, 1221820, 2808070, 1110530, 1079490, 1172950, 1592810, 2995100, 1040670], 
        2024: [1649410, 959390, 840610, 613620, 1885420, 1039380, 2592700, 1655890, 2144500, 1145530, 2815120, 1171300]
    }

    const samsungheadphones = {
        2020: [53950, 393480, 224510, 258040, 66770, 426730, 75570, 210630, 80990, 231930, 232800, 174600], 
        2021: [241570, 120170, 170000, 138030, 304630, 236870, 208980, 143090, 380990, 351680, 117040, 277720], 
        2022: [93200, 67110, 243080, 247410, 187020, 304660, 159540, 607710, 295400, 89220, 249620, 121770], 
        2023: [195320, 82160, 255840, 299140, 114930, 243820, 259810, 311950, 213730, 463430, 199150, 245960], 
        2024: [471230, 109300, 356170, 118060, 84030, 236210, 236480, 80370, 445380, 228040, 227580, 181920]
    }

    const samsungtablets = {
        2020: [1871660, 1260680, 534660, 1383660, 530590, 1057500, 2195500, 711160, 1020150, 1502290, 1240240, 283600], 
        2021: [984880, 1141830, 913870, 487480, 960520, 1797900, 290920, 1125450, 1016020, 1022520, 1002500, 1094830], 
        2022: [944340, 1439820, 349710, 1670500, 895440, 806130, 1690010, 1479030, 237660, 271380, 837860, 2211950], 
        2023: [1011650, 1554720, 671190, 807010, 1118480, 978170, 1402380, 1791730, 963060, 1141510, 828950, 525910], 
        2024: [800720, 367020, 1120600, 541080, 289320, 414480, 910500, 1106990, 1074330, 1522440, 240070, 1004690]
    }

    const samsungsmartwatch = {
        2020: [766570, 502480, 459690, 378030, 1003010, 849170, 609300, 442560, 926150, 248360, 584260, 411270], 
        2021: [899560, 722780, 517590, 664900, 992240, 961270, 541100, 561740, 850050, 927990, 418980, 503160], 
        2022: [413670, 225610, 279310, 682510, 843060, 720480, 836040, 754150, 589190, 586640, 895190, 313390], 
        2023: [724770, 788140, 1008940, 1284690, 324630, 478500, 558310, 1143420, 481670, 462810, 261860, 422920], 
        2024: [781020, 864870, 854900, 423090, 498470, 471530, 814260, 253950, 439100, 697910, 1238270, 458380]
    }

    const samsungall = {
        2020: [4139810, 4103080, 5136160, 3227040, 4507550, 4410530, 6499830, 4134490, 6404380, 4966110, 4698510, 3767760], 
        2021: [6404430, 4622080, 6212570, 2830800, 6423310, 5195670, 5394770, 5859090, 4805550, 5232530, 4092770, 5529470], 
        2022: [6082400, 3137970, 3962680, 6897700, 4871830, 5672380, 5510260, 6069980, 3133460, 4664450, 7147580, 4336760], 
        2023: [6360470, 5758650, 3770000, 6276060, 4064130, 5937530, 3775470, 5470000, 4097670, 4704900, 5155120, 2789080], 
        2024: [4214700, 3201990, 4178810, 1758070, 3205140, 2275020, 5480720, 4134360, 5953090, 3974010, 5273630, 3422970]
    }

    const sonysmartphones = {
        2020: [1227780, 577990, 674040, 1061850, 553310, 885550, 497290, 688910, 604890, 1634810, 1132280, 1425520], 
        2021: [1284270, 455160, 1069310, 159730, 1574800, 2200810, 1283800, 1253260, 1008770, 1025270, 705560, 1018180], 
        2022: [1457310, 1249520, 1213450, 1496370, 1171470, 411140, 836230, 393000, 973690, 1267540, 905180, 1096620], 
        2023: [1865970, 448240, 1470240, 1800760, 1033170, 1063920, 1098100, 1162910, 1985600, 1308960, 71550, 321580], 
        2024: [1065130, 1058620, 364130, 1046780, 1049340, 643920, 1008070, 1372190, 575650, 1482620, 474350, 1953120]
    }

    const sonylaptops = {
        2020: [1224500, 543600, 797930, 304150, 2366660, 1963790, 791450, 300850, 1387660, 2436030, 476820, 1246040], 
        2021: [2353870, 894930, 2029850, 1622350, 762070, 1868370, 1389910, 1869620, 2420540, 1315810, 2633100, 1308540], 
        2022: [559210, 898110, 1017060, 1433520, 1855240, 2071010, 581470, 639320, 1199220, 1227560, 1090370, 2232030], 
        2023: [1607440, 1048510, 2016890, 1495950, 733540, 2302130, 1713690, 1003420, 574020, 2022090, 614240, 1388710], 
        2024: [1958500, 859300, 710710, 579800, 828730, 408490, 547080, 883080, 1785980, 926470, 1662050, 899200]
    }

    const soonyheadphones = {
        2020: [524360, 308730, 465260, 282460, 685920, 168980, 271250, 421600, 567290, 326170, 278730, 26340], 
        2021: [565630, 333220, 254990, 484900, 357410, 347360, 630630, 500570, 281660, 382720, 113870, 470120], 
        2022: [478360, 124530, 289970, 555910, 478150, 364690, 542950, 482220, 115180, 470790, 163500, 449130], 
        2023: [298840, 214800, 196230, 306410, 498350, 347020, 295550, 396800, 694440, 198500, 846510, 278510], 
        2024: [412370, 254950, 241320, 253440, 533030, 78020, 682920, 779760, 99580, 518510, 289040, 561150]
    }

    const sonytablets = {
        2020: [587170, 665670, 1418590, 464070, 1963600, 151750, 382880, 206500, 938560, 1338680, 889640, 799640], 
        2021: [2558130, 926580, 1228010, 358240, 1009200, 1063150, 978960, 1806860, 538340, 108970, 1193150, 582260], 
        2022: [747770, 524810, 495780, 889080, 903340, 1131030, 1239950, 1128050, 1484600, 1055780, 677260, 222090], 
        2023: [612780, 2169150, 1508830, 878560, 386790, 1722680, 567420, 1891840, 185360, 939750, 806620, 780600], 
        2024: [266460, 1336860, 1351600, 1169820, 855460, 693760, 345560, 1209760, 927480, 1594660, 1327800, 1013560]
    }

    const sonysmartwatch = {
        2020: [400090, 515970, 579240, 652100, 958990, 865860, 576320, 367740, 408140, 673300, 809790, 948290], 
        2021: [1452830, 360550, 997790, 74590, 757440, 1157280, 1110060, 413490, 568200, 618050, 476610, 544450], 
        2022: [552030, 451250, 517480, 754890, 760460, 391960, 724530, 662950, 1048710, 941860, 423810, 86840], 
        2023: [344330, 603330, 275900, 433360, 1205700, 238620, 395670, 115620, 218980, 783010, 586470, 755520], 
        2024: [352050, 353370, 840540, 184350, 922010, 797720, 663830, 491050, 660210, 555230, 77490, 1433240]
    }

    const sonyall = {
        2020: [3963900, 2611960, 3935060, 2764630, 6528480, 4035930, 2519190, 1985600, 3906540, 6408990, 3587260, 4445830], 
        2021: [8214730, 2970440, 5579950, 2699810, 4460920, 6636970, 5393360, 5843800, 4817510, 3450820, 5122290, 3923550], 
        2022: [3794680, 3248220, 3533740, 5129770, 5168660, 4369830, 3925130, 3305540, 4821400, 4963530, 3260120, 4086710], 
        2023: [4729360, 4484030, 5468090, 4915040, 3857550, 5674370, 4070430, 4570590, 3658400, 5252310, 2925390, 3524920], 
        2024: [4054510, 3863100, 3508300, 3234190, 4188570, 2621910, 3247460, 4735840, 4048900, 5077490, 3830730, 5860270]
    }

    const hpsmartphones = {
        2020: [737530, 577540, 637540, 765810, 494010, 844530, 835800, 17240, 456890, 757790, 1081640, 1368110], 
        2021: [997350, 355250, 815420, 693190, 1023200, 575720, 206930, 474720, 507940, 1033770, 565950, 482740], 
        2022: [693990, 501610, 406120, 239190, 745940, 560630, 594670, 739630, 765150, 824230, 459390, 1127410], 
        2023: [652790, 930890, 679340, 348590, 1111180, 191240, 586840, 562030, 252640, 902520, 282070, 1119420], 
        2024: [844460, 576750, 1255940, 922190, 425270, 1121960, 785580, 1030570, 240080, 1208610, 540940, 245170]
    }

    const hplaptops = {
        2020: [1874670, 2600950, 3075800, 1003540, 705590, 1335120, 2083610, 2583270, 2017650, 2311350, 787560, 1637900], 
        2021: [1584810, 2052200, 892330, 541680, 1192370, 528300, 1132970, 2283550, 1325580, 1062390, 1780450, 1768740], 
        2022: [1719450, 2244860, 1669780, 2465780, 2352040, 893590, 1225140, 91760, 1642050, 1276520, 2244230, 531090], 
        2023: [1459800, 731180, 783400, 1420130, 1255970, 1475070, 2311760, 2055590, 942030, 923090, 1065930, 1084450], 
        2024: [2268710, 2734500, 848850, 330640, 1674880, 2107990, 1321040, 2111990, 2109920, 1515860, 535850, 799980]
    }

    const hpheadphones = {
        2020: [146450, 189730, 53250, 133190, 413860, 90400, 355230, 164510, 189100, 401640, 216560, 120130], 
        2021: [207290, 87900, 6850, 261190, 174450, 55470, 66540, 245830, 371210, 295750, 122540, 189680], 
        2022: [338240, 269200, 5740, 137680, 246900, 93380, 240490, 270690, 138140, 219810, 211100, 178980], 
        2023: [344850, 71060, 337920, 261870, 376950, 290790, 243910, 151300, 269590, 532560, 197710, 438190], 
        2024: [373750, 179990, 445160, 213520, 187170, 69500, 61860, 140430, 194580, 260480, 395920, 136400]
    }

    const hptablets = {
        2020: [805590, 860910, 1006440, 863440, 1585740, 1129900, 650610, 1090100, 317200, 463880, 263430, 969440], 
        2021: [813520, 1035160, 674190, 33100, 663970, 652470, 1266710, 593390, 1810780, 964270, 1372670, 369780], 
        2022: [1446470, 1329110, 835130, 1124880, 2268690, 805540, 1283360, 599000, 1092290, 1516260, 954280, 665310], 
        2023: [662720, 1401980, 755340, 712200, 1175880, 1599290, 995890, 771960, 838390, 1162480, 1972730, 740800], 
        2024: [394860, 1358830, 0, 1454310, 917420, 1618590, 776840, 524010, 1568320, 1538680, 1194500, 841490]
    }

    const hpsmartwatch = {
        2020: [296670, 96710, 270780, 584460, 666580, 513760, 344490, 259750, 386530, 570660, 294620, 224600], 
        2021: [907170, 631170, 232050, 593630, 366120, 416850, 220820, 483480, 137790, 507270, 103630, 218060], 
        2022: [767540, 157210, 294750, 188910, 157300, 272760, 253980, 587670, 675890, 207030, 183830, 328770], 
        2023: [149200, 595680, 518860, 274440, 475540, 317210, 298910, 163090, 433140, 456540, 507640, 189860], 
        2024: [518640, 573790, 211610, 303490, 191570, 646440, 520980, 579700, 513380, 418650, 232650, 188100]
    }

    const hpall = {
        2020: [3860910, 4325840, 5043810, 3350440, 3865780, 3913710, 4269740, 4114870, 3367370, 4505320, 2643810, 4320180], 
        2021: [4510140, 4161680, 2620840, 2122790, 3420110, 2228810, 2893970, 4080970, 4153300, 3863450, 3945240, 3029000], 
        2022: [4965690, 4501990, 3211520, 4156440, 5770870, 2625900, 3597640, 2288750, 4313520, 4043850, 4052830, 2831560], 
        2023: [3269360, 3730790, 3074860, 3017230, 4395520, 3873600, 4437310, 3703970, 2735790, 3977190, 4026080, 3572720], 
        2024: [4400420, 5423860, 2761560, 3224150, 3396310, 5564480, 3466300, 4386700, 4626280, 4942280, 2899860, 2211140]
    }

    const othersmartphones = {
        2020: [346140, 334230, 243420, 219330, 526130, 632600, 347420, 510120, 443130, 281020, 73280, 277400], 
        2021: [770070, 388700, 229580, 245900, 205610, 364780, 546310, 274300, 945430, 400300, 356290, 286890], 
        2022: [489730, 320040, 373220, 376420, 534010, 391260, 1135070, 713090, 493500, 275200, 272340, 415590], 
        2023: [331990, 476870, 226180, 406180, 118220, 267430, 81310, 211010, 334440, 508140, 394540, 462790], 
        2024: [366910, 62340, 309600, 227400, 272550, 288360, 339850, 189090, 476230, 570040, 592200, 263190]
    }

    const otherlaptops = {
        2020: [814980, 315380, 93060, 99790, 1382720, 85360, 1305940, 1120010, 1205320, 867300, 615640, 817660], 
        2021: [567160, 614110, 1149690, 1327440, 1231310, 476870, 649240, 585030, 1159550, 1263320, 697660, 960170], 
        2022: [463460, 1354830, 586050, 829290, 846970, 822910, 514190, 709440, 722670, 645310, 264460, 1116220], 
        2023: [932830, 249380, 1105500, 827090, 646620, 575100, 777990, 657730, 620020, 167890, 858070, 928550], 
        2024: [254740, 929670, 684580, 401760, 1388680, 867300, 1125040, 512110, 1858690, 950430, 11530, 797390]
    }

    const otherheadphones = {
        2020: [151970, 162280, 183560, 23280, 74750, 91780, 193140, 127560, 139680, 99340, 108910, 273880], 
        2021: [263010, 53270, 223850, 384750, 170270, 117860, 324370, 103550, 170580, 222030, 153050, 178260], 
        2022: [365810, 99410, 155960, 176710, 259380, 54120, 206020, 84300, 207550, 33010, 59320, 201560], 
        2023: [161290, 127720, 133920, 88480, 182970, 133030, 273050, 205830, 341750, 105740, 79680, 122690], 
        2024: [77790, 278780, 65290, 209540, 110920, 54190, 246300, 195300, 252060, 106780, 70670, 56430]
    }

    const othertablets = {
        2020: [292520, 87880, 279870, 400040, 602530, 89120, 118980, 65270, 427080, 490850, 332490, 403080], 
        2021: [558590, 334460, 75280, 189490, 479400, 453460, 726030, 342030, 183720, 565950, 405560, 159120], 
        2022: [505170, 207430, 398920, 40730, 450450, 225640, 380290, 342310, 264140, 563770, 346430, 270430], 
        2023: [109650, 266170, 467420, 285150, 427040, 196020, 184800, 116200, 504800, 482450, 460380, 143680], 
        2024: [520500, 121200, 367310, 246330, 142660, 170010, 69200, 407690, 34390, 260070, 560880, 361910]
    }

    const othersmartwatch = {
        2020: [207590, 147400, 175380, 217930, 172760, 373050, 221040, 245680, 178080, 110570, 54410, 135380], 
        2021: [6580, 338990, 284230, 300510, 200580, 389650, 251190, 564380, 244170, 192170, 253790, 143160], 
        2022: [364150, 205010, 137410, 236230, 248470, 149660, 96670, 99630, 176350, 194170, 90870, 14230], 
        2023: [148810, 153910, 284570, 90870, 154800, 169910, 163100, 90930, 159560, 157950, 109600, 151280], 
        2024: [118600, 164720, 234960, 91310, 59980, 168110, 221690, 34160, 350920, 77360, 294310, 326140]
    }

    const otherall = {
        2020: [1813200, 1047170, 975290, 960370, 2758890, 1271910, 2186520, 2068640, 2393290, 1849080, 1184730, 1907400], 
        2021: [2165410, 1729530, 1962630, 2448090, 2287170, 1802620, 2497140, 1869290, 2703450, 2643770, 1866350, 1727600], 
        2022: [2188320, 2186720, 1651560, 1659380, 2339280, 1643590, 2332240, 1948770, 1864210, 1711460, 1033420, 2018030], 
        2023: [1684570, 1274050, 2217590, 1697770, 1529650, 1341490, 1480250, 1281700, 1960570, 1422170, 1902270, 1808990], 
        2024: [1338540, 1556710, 1661740, 1176340, 1974790, 1547970, 2002080, 1338350, 2972290, 1964680, 1529590, 1805060]
    }

    const totalSales = {2020: 121060319.30,2021: 136001094.18,2022: 144292162.31,2023: 129844412.33,2024: 129425277.51,};
    const allAppleAll = {2020: 72597580, 2021: 71181860, 2022: 83383720, 2023: 69488670, 2024: 67176630}
    const allSamsungAll = {2020: 55995250, 2021: 62603040, 2022: 61487450, 2023: 58159080, 2024: 47072510}
    const allSonyAll = {2020: 46693370, 2021: 59114150, 2022: 49607330, 2023: 53130480, 2024: 48271270}
    const allhpall = {2020: 47581780, 2021: 41030300, 2022: 46360560, 2023: 43814420, 2024: 47303340}
    const allotherbrandsall = {2020: 20416490, 2021: 25703050, 2022: 22576980, 2023: 19601070, 2024: 20868140}
    const allallsmartphones ={2020: 46326010, 2021: 55766150, 2022: 65273920, 2023: 54788800, 2024: 51245270}
    const allallheadphones = {2020: 14056230, 2021: 15854390, 2022: 15244430, 2023: 16578520, 2024: 14593070}
    const allalllaptops = {2020: 93747630, 2021: 99044640, 2022: 93746830, 2023: 82824780, 2024: 77734680}
    const allalltabets = {2020: 60534880, 2021: 56644330, 2022: 62471660, 2023: 62875970, 2024: 56567650}
    const allallsmartwatches = {2020: 28619720, 2021: 32322890, 2022: 26679200, 2023: 27125650, 2024: 30551220}
    const allapplesmartphones = {2020: 14508310, 2021: 19528590, 2022: 23907030, 2023: 17146410, 2024: 17399190}
    const allappleheadphones = {2020: 3194960, 2021: 3990990, 2022: 3809810, 2023: 3648470, 2024: 2731400}
    const allapplelaptops = {2020: 24420100, 2021: 22688870, 2022: 28309920, 2023: 20483300, 2024: 19030290}
    const allappletablets = {2020: 23540050, 2021: 17730660, 2022: 21222260, 2023: 21197410, 2024: 19632630}
    const allapplesmartwatches = {2020: 6934160, 2021: 7242750, 2022: 6134700, 2023: 7013080, 2024: 8383120}
    const allsamsmartphones = {2020: 8044830, 2021: 10452300, 2022: 15447940, 2023: 12572740, 2024: 8596880}
    const allsamheadphones = {2020: 2430000, 2021: 2690770, 2022: 2665740, 2023: 2885240, 2024: 2774770}
    const allsamlaptops = {2020: 24747880, 2021: 29059890, 2022: 23400700, 2023: 21965680, 2024: 18512870}
    const allsamtablets = {2020: 13591690, 2021: 11838720, 2022: 12833830, 2023: 12794760, 2024: 9392240}
    const allsamsmartwatch = {2020: 7180850, 2021: 8561360, 2022: 7139240, 2023: 7940660, 2024: 7795750}
    const allsonysmartp = {2020: 10964220, 2021: 13038920, 2022: 12471520, 2023: 13631000, 2024: 12093920}
    const allsonyheadp = {2020: 4327090, 2021: 4723080, 2022: 4515380, 2023: 4571960, 2024: 4704090}
    const allsonylaptops = {2020: 13839480, 2021: 20468960, 2022: 14804120, 2023: 16520630, 2024: 12049390}
    const allsonytablets =  {2020: 9806750, 2021: 12351850, 2022: 10499540, 2023: 12450380, 2024: 12092780}
    const allsonysmartw = {2020: 7755830, 2021: 8531340, 2022: 7316770, 2023: 5956510, 2024: 7331090}
    const allhpsmartp = {2020: 8574430, 2021: 7732180, 2022: 7657960, 2023: 7619550, 2024: 9197520}
    const allhpheadp = {2020: 2474050, 2021: 2084700, 2022: 2350350, 2023: 3516700, 2024: 2658760}
    const allhplaptops = {2020: 22017010, 2021: 16145370, 2022: 18356290, 2023: 15508400, 2024: 18360210}
    const allhptablets = {2020: 10006680, 2021: 10250010, 2022: 13920320, 2023: 12789660, 2024: 12187850}
    const allhpsmartw = {2020: 4509610, 2021: 4818040, 2022: 4075640, 2023: 4380110, 2024: 4899000}
    const allothersmartp = {2020: 4234220, 2021: 5014160, 2022: 5789470, 2023: 3819100, 2024: 3957760}
    const allotherheadp = {2020: 1630130, 2021: 2364850, 2022: 1903150, 2023: 1956150, 2024: 1724050}
    const allotherlaptops = {2020: 8723160, 2021: 10681550, 2022: 8875800, 2023: 8346770, 2024: 9781920}
    const allothertablets = {2020: 3589710, 2021: 4473090, 2022: 3995710, 2023: 3643760, 2024: 3262150}
    const allothersmartw = {2020: 2239270, 2021: 3169400, 2022: 2012850, 2023: 1835290, 2024: 2142260}
    
    const monthlyLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'Decembers'];

    let transactionData = [];
    let salesData = [];
    let labels = [];
    let transactionTitle = 'Total Transactions';
    let salesTitle = 'Total Sales';

    // Check if 'All' filters are selected, then show the total transaction and sales graph for all years
    if (selectedYear === 'all') {
        if(selectedBrand == 'all'){
            if(selectedProduct == 'all'){
                for (const year in totalSales) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(totalTransactions[year]);  // Add total transactions for each year
                    salesData.push(totalSales[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Smartphones") {
                for (const year in allallsmartphones) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallallsmartp[year]);  // Add total transactions for each year
                    salesData.push(allallsmartphones[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Headphones") {
                for (const year in allallheadphones) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallallheadp[year]);  // Add total transactions for each year
                    salesData.push(allallheadphones[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Laptops") {
                for (const year in allalllaptops) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallalllaptops[year]);  // Add total transactions for each year
                    salesData.push(allalllaptops[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Tablets") {
                for (const year in allalltabets) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallalltablets[year]);  // Add total transactions for each year
                    salesData.push(allalltabets[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Smart Watches") {
                for (const year in allallsmartwatches) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallallsmartw[year]);  // Add total transactions for each year
                    salesData.push(allallsmartwatches[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else {
                // Show warning if no data matches the filters
                Swal.fire({
                    title: "No data available.",
                    text: "Please check your filter selections.",
                    icon: "warning",
                    timer: 3000,
                    showConfirmButton: false
                });
                console.log("No data for the selected filters");
            }
        } else if (selectedBrand == 'Apple') {
            if(selectedProduct == "all"){
                for (const year in allAppleAll) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallappleall[year]);  // Add total transactions for each year
                    salesData.push(allAppleAll[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                for (const year in allapplesmartphones) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallapplesmartp[year]);  // Add total transactions for each year
                    salesData.push(allapplesmartphones[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                for (const year in allappleheadphones) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallappleheadp[year]);  // Add total transactions for each year
                    salesData.push(allappleheadphones[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                for (const year in allapplelaptops) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallappllelaptops[year]);  // Add total transactions for each year
                    salesData.push(allapplelaptops[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                for (const year in allappletablets) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallappletablets[year]);  // Add total transactions for each year
                    salesData.push(allappletablets[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                for (const year in allapplesmartwatches) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallapplesmartw[year]);  // Add total transactions for each year
                    salesData.push(allapplesmartwatches[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            }
        } else if (selectedBrand == 'Samsung'){
            if(selectedProduct == "all"){
                for (const year in allSamsungAll) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsamsungall[year]);  // Add total transactions for each year
                    salesData.push(allSamsungAll[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                for (const year in allsamsmartphones) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsamsmartp[year]);  // Add total transactions for each year
                    salesData.push(allsamsmartphones[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                for (const year in allsamheadphones) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsamheadp[year]);  // Add total transactions for each year
                    salesData.push(allsamheadphones[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                for (const year in allsamlaptops) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsamlaptops[year]);  // Add total transactions for each year
                    salesData.push(allsamlaptops[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                for (const year in allsamtablets) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsamtablets[year]);  // Add total transactions for each year
                    salesData.push(allsamtablets[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                for (const year in allsamsmartwatch) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsamsmartw[year]);  // Add total transactions for each year
                    salesData.push(allsamsmartwatch[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            }
        } else if (selectedBrand == 'Sony'){
            if( selectedProduct == "all"){
                for (const year in allSonyAll) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsonyall[year]);  // Add total transactions for each year
                    salesData.push(allSonyAll[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if( selectedProduct == "Smartphones"){
                for (const year in allsonysmartp) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsonysmartp[year]);  // Add total transactions for each year
                    salesData.push(allsonysmartp[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if( selectedProduct == "Headphones"){
                for (const year in allsonyheadp) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsonyheadp[year]);  // Add total transactions for each year
                    salesData.push(allsonyheadp[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if( selectedProduct == "Laptops"){
                for (const year in allsonylaptops) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsonylaptops[year]);  // Add total transactions for each year
                    salesData.push(allsonylaptops[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if( selectedProduct == "Tablets"){
                for (const year in allsonytablets) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsonytablets[year]);  // Add total transactions for each year
                    salesData.push(allsonytablets[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if( selectedProduct == "Smart Watches"){
                for (const year in allsonysmartw) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallsonysmartw[year]);  // Add total transactions for each year
                    salesData.push(allsonysmartw[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            }
        } else if (selectedBrand == 'HP'){
            if (selectedProduct == "all"){
                for (const year in allhpall) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallhpall[year]);  // Add total transactions for each year
                    salesData.push(allhpall[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Smartphones"){
                for (const year in allhpsmartp) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallhpsmartp[year]);  // Add total transactions for each year
                    salesData.push(allhpsmartp[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Headphones"){
                for (const year in allhpheadp) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallhpheadp[year]);  // Add total transactions for each year
                    salesData.push(allhpheadp[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Laptops"){
                for (const year in allhplaptops) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallhplaptops[year]);  // Add total transactions for each year
                    salesData.push(allhplaptops[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Tablets"){
                for (const year in allhptablets) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallhptablets[year]);  // Add total transactions for each year
                    salesData.push(allhptablets[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if (selectedProduct == "Smart Watches"){
                for (const year in allhpsmartw) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallhpsmartw[year]);  // Add total transactions for each year
                    salesData.push(allhpsmartw[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            }
        } else if (selectedBrand == "Other Brands"){
            if(selectedProduct == "all"){
                for (const year in allotherbrandsall) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallotherall[year]);  // Add total transactions for each year
                    salesData.push(allotherbrandsall[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                for (const year in allothersmartp) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallotthersmartp[year]);  // Add total transactions for each year
                    salesData.push(allothersmartp[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                for (const year in allotherheadp) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallotherheadp[year]);  // Add total transactions for each year
                    salesData.push(allotherheadp[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                for (const year in allotherlaptops) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallotherlaptops[year]);  // Add total transactions for each year
                    salesData.push(allotherlaptops[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                for (const year in allothertablets) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallothertablets[year]);  // Add total transactions for each year
                    salesData.push(allothertablets[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                for (const year in allothersmartw) {
                    labels.push(year);  // Add year to the labels
                    transactionData.push(sallothersmartw[year]);  // Add total transactions for each year
                    salesData.push(allothersmartw[year]);  // Add total sales for each year
                }
        
                // Update Total Transactions chart
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();
        
                // Update Total Sales chart
                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.update();
            }
        } else {
            // Show warning if no data matches the filters
            Swal.fire({
                title: "No data available.",
                text: "Please check your filter selections.",
                icon: "warning",
                timer: 3000,
                showConfirmButton: false
            });
            console.log("No data for the selected filters");
        }
    }else if (selectedYear !== 'all') {
        if(selectedBrand  == "all"){
            if(selectedProduct == "all"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = totalMonthlyTransactions[selectedYear];
                salesData = totalMonthlySales[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssmartphones[selectedYear];
                salesData = smartphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sheadphones[selectedYear];
                salesData = headphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = slaptops[selectedYear];
                salesData = laptops[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = stablets[selectedYear];
                salesData = tablets[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssmartwatch[selectedYear];
                salesData = smartwatches[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            }
        } else if (selectedBrand == "Apple"){
            if(selectedProduct == "all"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sappleall[selectedYear];
                salesData = appleall[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sapplesmartphones[selectedYear];
                salesData = applesmartphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sappleheadphones[selectedYear];
                salesData = appleheadphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sapplelaptops[selectedYear];
                salesData = applelaptops[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sappletablets[selectedYear];
                salesData = appletablets[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sapplesmartwatch[selectedYear];
                salesData = applesmartwatches[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            }
        } else if (selectedBrand == "Samsung"){
            if(selectedProduct == "all"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssamall[selectedYear];
                salesData = samsungall[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssamsmartphone[selectedYear];
                salesData = samsungsmartphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssamheadphones[selectedYear];
                salesData = samsungheadphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssamlaptops[selectedYear];
                salesData = samsunglaptops[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssamtablets[selectedYear];
                salesData = samsungtablets[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssamsmartwatch[selectedYear];
                salesData = samsungsmartwatch[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            }
        } else if (selectedBrand == "Sony"){
            if(selectedProduct == "all"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssonyall[selectedYear];
                salesData = sonyall[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssonysmartphone[selectedYear];
                salesData = sonysmartphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssonyheadphones[selectedYear];
                salesData = soonyheadphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssonylaptops[selectedYear];
                salesData = sonylaptops[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssonytablets[selectedYear];
                salesData = sonytablets[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = ssonysmartwatch[selectedYear];
                salesData = sonysmartwatch[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            }
        } else if (selectedBrand == "HP"){
            if(selectedProduct == "all"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = shpall[selectedYear];
                salesData = hpall[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = shpsmartphone[selectedYear];
                salesData = hpsmartphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = shpheadphones[selectedYear];
                salesData = hpheadphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = shplaptops[selectedYear];
                salesData = hplaptops[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = shptablets[selectedYear];
                salesData = hptablets[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = shpsmartwatch[selectedYear];
                salesData = hpsmartwatch[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            }
        } else if(selectedBrand == "Other Brands"){
            if(selectedProduct == "all"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sotherall[selectedYear];
                salesData = otherall[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smartphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sothersmartphone[selectedYear];
                salesData = othersmartphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Headphones"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sotherheadphones[selectedYear];
                salesData = otherheadphones[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Laptops"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sotherlaptops[selectedYear];
                salesData = otherlaptops[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Tablets"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sothertablets[selectedYear];
                salesData = othertablets[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            } else if(selectedProduct == "Smart Watches"){
                // If a specific year is selected
                labels = monthlyLabels;  // Use month labels
                transactionData = sothersmartwatch[selectedYear];
                salesData = othersmartwatch[selectedYear];
                
                transactionChart.data.labels = labels;
                transactionChart.data.datasets[0].data = transactionData;
                transactionChart.update();

                salesChart.data.labels = labels;
                salesChart.data.datasets[0].data = salesData;
                salesChart.options.plugins.title = {
                    display: true,
                    text: salesTitle,  // Dynamic title based on the selected year
                };
                salesChart.update();
            }
        }
    } else {
        // Show warning if no data matches the filters
        Swal.fire({
            title: "No data available.",
            text: "Please check your filter selections.",
            icon: "warning",
            timer: 3000,
            showConfirmButton: false
        });
        console.log("No data for the selected filters");
    }
};

const firebaseConfig = {
    apiKey: "AIzaSyBf4xDYf1i5UDAc9jpB33Cein_sgATriyw",
    authDomain: "techforecastinitial.firebaseapp.com",
    projectId: "techforecastinitial",
    storageBucket: "techforecastinitial.firebasestorage.app",
    messagingSenderId: "1022311444244",
    appId: "1:1022311444244:web:ef464c4c03285bb351dc01",
    measurementId: "G-G421TQ07R4"
};

firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

// Check if user is signed in
firebase.auth().onAuthStateChanged((user) => {
    const userNameEl = document.getElementById("userName");
  
    if (user) {
      const userId = user.uid;
    } else {
      userNameEl.textContent = "Not signed in";
    }
  });

window.logoutUser = async function () {
    const result = await Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to log out?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, log out",
        cancelButtonText: "No, stay",
        reverseButtons: true
    });
  
    if (result.isConfirmed) {
        try {
            // Correct sign-out method
            await firebase.auth().signOut();
            
            // Show success message
            Swal.fire({
                title: "Logged Out",
                text: "You have been logged out successfully.",
                icon: "success",
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                window.location.href = "index.html"; // Redirect to login page
            });
        } catch (error) {
            // Show error message
            Swal.fire({
                title: "Logout Error",
                text: "An error occurred while logging out.",
                icon: "error",
                timer: 3000,
                showConfirmButton: false
            });
        }
    }
  };

// Function to check the read status of notifications and update the bell icon
async function checkNotificationStatus(userId) {
    try {
        // Set loading image while fetching notifications
        const bellImage = document.querySelector('.notification-bell');
        bellImage.src = "img_svg/load.jpg"; // Set the loading image
  
        // Reference to the user's notification logs
        const notificationsRef = firebase.firestore().collection("notifications").doc(userId).collection("logs");
        
        // Get all notifications for the user
        const querySnapshot = await notificationsRef.get();
  
        let isUnread = false;
  
        // Loop through all notifications and check the read status
        querySnapshot.forEach(doc => {
            const notification = doc.data();
            if (notification.read === "no") {
                isUnread = true; // If there's any unread notification, set the flag to true
            }
        });
  
        // Update the bell image based on the unread status
        if (isUnread) {
            bellImage.src = "img_svg/notificationwith.jpg"; // Set image to notificationwith.jpg if there's an unread notification
        } else {
            bellImage.src = "img_svg/notification.jpg"; // Set image to notification.jpg if all are read
        }
  
    } catch (error) {
        console.error("Error checking notification status:", error);
        const bellImage = document.querySelector('.notification-bell');
        bellImage.src = "img_svg/notification.jpg"; // Fallback to the default image if there's an error
    }
  }
  
  // Listen for auth state changes to check the notification status for logged-in user
  firebase.auth().onAuthStateChanged((user) => {
    if (user) {
        const userId = user.uid;
        // Check notification status for the logged-in user
        checkNotificationStatus(userId);
    }
  });
  
  // Function to toggle the visibility of notifications when the bell is clicked
  function toggleNotifications() {
    const notificationContainer = document.getElementById("notification-container");
    notificationContainer.style.display = (notificationContainer.style.display === "none" || notificationContainer.style.display === "") ? "block" : "none";
    
    // Fetch and display notifications if they are not already loaded
    if (notificationContainer.style.display === "block") {
        fetchNotifications();
    }
  }
  
  async function fetchNotifications() {
    const user = firebase.auth().currentUser;
    if (!user) {
      console.error("No user is signed in.");
      return;
    }
  
    const userId = user.uid;
    const notificationsRef = firebase.firestore().collection("notifications").doc(userId).collection("logs");
  
    try {
      const querySnapshot = await notificationsRef.get();
  
      const notificationList = document.getElementById("notifications-list");
      notificationList.innerHTML = "";
  
      // 👉 Check if there are no notifications
      if (querySnapshot.empty) {
        notificationList.innerHTML = `<div class="notification empty">Empty notification</div>`;
        return;
      }
  
      // Display each notification
      querySnapshot.forEach(doc => {
        const notification = doc.data();
        const notificationElement = document.createElement("div");
        notificationElement.classList.add("notification");
  
        if (notification.read === "no") {
          notificationElement.classList.add("unread");
        } else {
          notificationElement.classList.add("read");
        }
  
        notificationElement.innerHTML = `
          <p>${notification.message}</p>
          <span class="timestamp">${new Date(notification.timestamp.seconds * 1000).toLocaleString()}</span>
        `;
  
        notificationList.appendChild(notificationElement);
      });
  
    } catch (error) {
      console.error("Error fetching notifications:", error);
    }
  }
  
  window.toggleNotifications = function () {
    const notificationContainer = document.getElementById("notification-container");
    notificationContainer.style.display = (notificationContainer.style.display === "none" || notificationContainer.style.display === "") ? "block" : "none";
    
    // Fetch and display notifications if container is shown
    if (notificationContainer.style.display === "block") {
        fetchNotifications();
    }
  };
  
  async function deleteAllNotifications() {
    const user = firebase.auth().currentUser;
    if (!user) return;
  
    const userId = user.uid;
    const logsRef = firebase.firestore().collection("notifications").doc(userId).collection("logs");
  
    const snapshot = await logsRef.get();
    const batch = firebase.firestore().batch();
  
    snapshot.forEach(doc => {
      batch.delete(doc.ref);
    });
  
    await batch.commit();
    document.getElementById("notifications-list").innerHTML = "";
    location.reload(); // Refresh the page to update bell image and UI
  }
  
  async function markAllAsRead() {
    const user = firebase.auth().currentUser;
    if (!user) return;
  
    const userId = user.uid;
    const logsRef = firebase.firestore().collection("notifications").doc(userId).collection("logs");
  
    const snapshot = await logsRef.get();
    const batch = firebase.firestore().batch();
  
    snapshot.forEach(doc => {
      batch.update(doc.ref, { read: "yes" });
    });
  
    await batch.commit();
    fetchNotifications(); // Optional: update UI
    location.reload();    // Refresh the page to update the bell image
  }
  
  window.markAllAsRead = markAllAsRead;
  window.deleteAllNotifications = deleteAllNotifications;